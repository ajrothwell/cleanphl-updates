{"version":3,"sources":["webpack:///node_modules/@philly/vue-mapping/src/pictometry/PngMarker.vue","webpack:///./node_modules/@philly/vue-mapping/src/pictometry/PngMarker.vue","webpack:///./node_modules/@philly/vue-mapping/src/pictometry/PngMarker.vue?d3a1"],"names":["render","staticRenderFns","PngMarkervue_type_script_lang_js_","name","props","h","computed","ipa","this","$store","state","pictometry","mounted","placeMarker","$props","latlng","beforeDestroy","removeShapes","pngMarkerIds","watch","nextLatlng","methods","constructLocalUrl","host","path1","path2","url","window","location","protocol","port","hostname","pngMarker","type","SHAPE_TYPE","MARKER","center","y","x","markerImageHeight","height","markerImageWidth","width","markerOffsetX","offsetX","markerOffsetY","offsetY","markerImage","icon","onShapeClick","addShapes","didAddShapes","result","i","length","success","console","log","error","push","shapeId","pictometry_PngMarkervue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"uIACA,ICDAA,EAAAC,EDCAC,EAAA,CACAC,KAAA,sBACAC,MAAA,CACA,OACA,SACA,SACA,SAEAJ,OARA,SAQAK,KAGAC,SAAA,CACAC,IADA,WAEA,OAAAC,KAAAC,OAAAC,MAAAC,WAAAJ,MAGAK,QAhBA,WAkBAJ,KAAAK,YAAAL,KAAAM,OAAAC,SAEAC,cApBA,WAsBAR,KAAAD,IAAAU,aAAAT,KAAAC,OAAAC,MAAAC,WAAAO,eAQAC,MAAA,CACAJ,OADA,SACAK,GAEAZ,KAAAD,IAAAU,aAAAT,KAAAC,OAAAC,MAAAC,WAAAO,cACAV,KAAAK,YAAAO,KAGAC,QAAA,CACAC,kBADA,SACAC,EAAAC,EAAAC,GACA,IAAAC,EASA,OANAA,EAFA,WAAAC,OAAAC,SAAAC,SAEA,WAAAN,EAAAC,EAAAC,EAGA,UAAAF,EAAAC,EAAAC,EAGAC,GAEAb,YAbA,SAaAO,GAEA,IACAG,EADAO,EAAAH,OAAAC,SAAAE,KAGAP,EADA,IAAAO,EACAH,OAAAC,SAAAG,SAAA,IAAAD,EAEAH,OAAAC,SAAAG,SAEA,IAAAC,EAAA,CACAC,KAAAzB,KAAAD,IAAA2B,WAAAC,OACAC,OAAA,CAAAC,EAAAjB,EAAA,GAAAkB,EAAAlB,EAAA,IACAmB,kBAAA/B,KAAAM,OAAA0B,OACAC,iBAAAjC,KAAAM,OAAA4B,MACAC,cAAAnC,KAAAM,OAAA8B,QACAC,cAAArC,KAAAM,OAAAgC,QACAC,YAAAvC,KAAAc,kBAAAC,EAAA,IAAAf,KAAAM,OAAAkC,MACAC,aAAA,QAEAzC,KAAAD,IAAA2C,UAAA,CAAAlB,GAAAxB,KAAA2C,eAEAA,aAlCA,SAkCAC,GAKA,QAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IACA,aAAAD,EAAAC,GAAAE,QACAC,QAAAC,IAAAL,EAAAC,GAAAK,WACA,CACA,IAAAxC,EAAAV,KAAAC,OAAAC,MAAAC,WAAAO,aAEAA,EAAAyC,KAAAP,EAAAC,GAAAO,aEnFgTC,EAAA,cDOhTC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACF7D,EACAC,GACA,EACA,KACA,KACA,MAIegE,EAAA,WAAAH","file":"js/mbmb_pvm_PictometryPngMarker.b44bb926.js","sourcesContent":["<script>\n  export default {\n    name: 'PictometryPngMarker',\n    props: [\n      'icon',\n      'latlng',\n      'height',\n      'width'\n    ],\n    render(h) {\n      return;\n    },\n    computed: {\n      ipa() {\n        return this.$store.state.pictometry.ipa;\n      },\n    },\n    mounted() {\n      // console.log('mounting PngMarker', this.icon);\n      this.placeMarker(this.$props.latlng);\n    },\n    beforeDestroy() {\n      // console.log('before destroying PngMarker', this.icon);\n      this.ipa.removeShapes(this.$store.state.pictometry.pngMarkerIds);\n      // console.log('before destroyed PngMarker', this.icon);\n    },\n    // destroyed() {\n    //   console.log('destroying PngMarker', this.icon);\n    //   this.ipa.removeShapes(this.$store.state.pictometry.pngMarkerIds);\n    //   console.log('destroyed PngMarker', this.icon);\n    // },\n    watch: {\n      latlng(nextLatlng) {\n        // console.log('PngMarker: latlng changed');\n        this.ipa.removeShapes(this.$store.state.pictometry.pngMarkerIds);\n        this.placeMarker(nextLatlng);\n      }\n    },\n    methods: {\n      constructLocalUrl(host, path1, path2) {\n        let url;\n        if (window.location.protocol === 'https:') {\n          // console.log('using https', window.location.protocol);\n          url = 'https://' + host + path1 + path2;\n        } else {\n          // console.log('using http', window.location.protocol);\n          url = 'http://' + host + path1 + path2;\n        }\n        // console.log('constructing url:', url);\n        return url\n      },\n      placeMarker(nextLatlng) {\n        // console.log('starting placeMarker', nextLatlng, this.$props.icon, 'this.ipa:', this.ipa);\n        const port = window.location.port;\n        let host;\n        if (port != '') {\n          host = window.location.hostname + ':' + port;\n        } else {\n          host = window.location.hostname;\n        }\n        const pngMarker = {\n          type : this.ipa.SHAPE_TYPE.MARKER,\n          center: { y: nextLatlng[0], x: nextLatlng[1]},\n          markerImageHeight: this.$props.height,\n          markerImageWidth: this.$props.width,\n          markerOffsetX: this.$props.offsetX,\n          markerOffsetY: this.$props.offsetY,\n          markerImage: this.constructLocalUrl(host, '/', this.$props.icon),\n          onShapeClick: 'true'\n        };\n        this.ipa.addShapes([pngMarker], this.didAddShapes)\n      },\n      didAddShapes(result) {\n        // const pngMarkerIds = shapes.filter(shape => {\n        //                         return shape.success === 'true';\n        //                       }).map(shape => shape.shapeId);\n        // this.$store.commit('setPictometryPngMarkerIds', pngMarkerIds);\n        for ( var i = 0; i < result.length; i++) {\n          if ( result[i].success === 'false' ) {\n            console.log(result[i].error);\n          } else {\n            const pngMarkerIds = this.$store.state.pictometry.pngMarkerIds;\n            // console.log('pngMarkerIds', pngMarkerIds);\n            pngMarkerIds.push(result[i].shapeId);\n\n          }\n        }\n      },\n    }\n  };\n</script>\n","var render, staticRenderFns\nimport script from \"./PngMarker.vue?vue&type=script&lang=js&\"\nexport * from \"./PngMarker.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./PngMarker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./PngMarker.vue?vue&type=script&lang=js&\""],"sourceRoot":""}