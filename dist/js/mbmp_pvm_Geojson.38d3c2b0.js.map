{"version":3,"sources":["webpack:///../phila-vue-mapping/src/leaflet/Geojson.vue?e045","webpack:///../phila-vue-mapping/src/leaflet/Geojson.vue","webpack:///../phila-vue-mapping/src/leaflet/Geojson.vue?48f6"],"names":["render","staticRenderFns","GeoJson","leaflet_src","Geojsonvue_type_script_lang_js_","name","props","mounted","leafletElement","this","$leafletElement","createLeafletElement","map","$store","state","addTo","Object","bind_events","_events","destroyed","_map","removeLayer","h","methods","$props","geojson","options","objectWithoutProperties","newGeojson","parentMounted","parent","leaflet_Geojsonvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"6HAAAA,EAAAC,uCCKAC,EAAAC,EAAA,WAEAC,EAAA,CACAC,KAAA,UACAC,MAAA,CACA,UACA,YACA,QACA,SACA,UACA,cACA,QAEAC,QAXA,WAYA,IAAAC,EAAAC,KAAAC,gBAAAD,KAAAE,uBACAC,EAAAH,KAAAI,OAAAC,MAAAF,QAEAA,GACAJ,EAAAO,MAAAH,GAGAI,OAAAC,EAAA,KAAAD,CAAAP,UAAAC,gBAAAD,KAAAS,UAEAC,UArBA,WAsBAV,KAAAC,gBAAAU,KAAAC,YAAAZ,KAAAC,kBAIAV,OA1BA,SA0BAsB,KAGAC,QAAA,CACAZ,qBADA,WAEA,IAAAL,EAAAG,KAAAe,OAEAC,EAEAnB,EAFAmB,QACAC,EAJAV,OAAAW,EAAA,KAAAX,CAKAV,EALA,aAQAsB,EAAA,IAAA1B,EAAAuB,EAAAC,GAEA,OAAAE,GAYAC,cAvBA,SAuBAC,GACA,IAAAlB,EAAAkB,EAAApB,gBACAD,KAAAC,gBAAAK,MAAAH,MC7DqbmB,EAAA,cFOrbC,EAAgBhB,OAAAiB,EAAA,KAAAjB,CACde,EACF/B,EACAC,GACA,EACA,KACA,KACA,MAIeiC,EAAA,WAAAF","file":"js/mbmp_pvm_Geojson.38d3c2b0.js","sourcesContent":["var render, staticRenderFns\nimport script from \"./Geojson.vue?vue&type=script&lang=js&\"\nexport * from \"./Geojson.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../cleanphl-updates/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  import { geoJSON } from 'leaflet';\r\n  import bindEvents from './util/bind-events';\r\n\r\n  // pascal case\r\n  const GeoJson = geoJSON;\r\n\r\n  export default {\r\n    name: 'Geojson',\r\n    props: [\r\n      'geojson',\r\n      'fillColor',\r\n      'color',\r\n      'weight',\r\n      'opacity',\r\n      'fillOpacity',\r\n      'data'\r\n    ],\r\n    mounted() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n\r\n      bindEvents(this, this.$leafletElement, this._events);\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    // we don't actually render anything, but need to define either a template\r\n    // or a render function\r\n    render(h) {\r\n      return;\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const props = this.$props;\r\n        const {\r\n          geojson,\r\n          ...options\r\n        } = props;\r\n\r\n        // console.log('geojson', geojson)\r\n        const newGeojson = new GeoJson(geojson, options);\r\n        //this.$store.commit('setCircleMarkers', newCircleMarker);\r\n        return newGeojson;\r\n        // if the geoJSON feature is a point, it needs to be styled through \"pointToLayer\"\r\n        // const type = this.$props.overlay.type;\r\n        // const style = this.$props.overlay.style;\r\n        // return new GeoJson(this.$props.geojson, {\r\n        //   color: this.$props.color,\r\n        //   weight: this.$props.weight,\r\n        //   // pointToLayer: function (feature, latlng) {\r\n      \t// \t// \treturn type(latlng, style)\r\n        //   // }\r\n        // });\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n</script>\r\n","import mod from \"-!../../../cleanphl-updates/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../cleanphl-updates/node_modules/thread-loader/dist/cjs.js!../../../cleanphl-updates/node_modules/babel-loader/lib/index.js!../../../cleanphl-updates/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../cleanphl-updates/node_modules/vue-loader/lib/index.js??vue-loader-options!./Geojson.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../cleanphl-updates/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../cleanphl-updates/node_modules/thread-loader/dist/cjs.js!../../../cleanphl-updates/node_modules/babel-loader/lib/index.js!../../../cleanphl-updates/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../cleanphl-updates/node_modules/vue-loader/lib/index.js??vue-loader-options!./Geojson.vue?vue&type=script&lang=js&\""],"sourceRoot":""}