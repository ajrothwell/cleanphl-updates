{"version":3,"sources":["webpack:///./node_modules/@philly/vue-mapping/src/esri-leaflet/FeatureLayer.vue","webpack:///node_modules/@philly/vue-mapping/src/esri-leaflet/FeatureLayer.vue","webpack:///./node_modules/@philly/vue-mapping/src/esri-leaflet/FeatureLayer.vue?f040"],"names":["render","staticRenderFns","FeatureLayervue_type_script_lang_js_","name","props","created","leafletElement","this","$leafletElement","createLeafletElement","console","log","map","$store","state","addTo","destroyed","_map","removeLayer","h","methods","assign_default","$props","layerName","getPane","createPane","style_","style","markerType","pointToLayer","geojson","latlng","leaflet_src","pane","color","fillColor","fillOpacity","weight","radius","interactive","EsriLeaflet","parentMounted","parent","esri_leaflet_FeatureLayervue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"wIAAAA,EAAAC,+CCUAC,EAAA,CACAC,KAAA,mBACAC,MAAA,CACA,MACA,UACA,UACA,SACA,YACA,QACA,YACA,cACA,SACA,SACA,aACA,SACA,eAEAC,QAjBA,WAkBA,IAAAC,EAAAC,KAAAC,gBAAAD,KAAAE,uBACAC,QAAAC,IAAA,kBAAAL,GACA,IAAAM,EAAAL,KAAAM,OAAAC,MAAAF,QAEAA,GACAN,EAAAS,MAAAH,IAGAI,UA1BA,WA2BAT,KAAAC,gBAAAS,KAAAC,YAAAX,KAAAC,kBAIAR,OA/BA,SA+BAmB,KAGAC,QAAA,CACAX,qBADA,WAEA,IAAAL,EAAAiB,IAAA,GAAAd,KAAAe,QAEAV,EAAAL,KAAAM,OAAAC,MAAAF,QACAW,EAAAnB,EAAAmB,UACAX,EAAAY,QAAAD,IACAX,EAAAa,WAAAF,GANA,IAUAG,EAAAtB,EAAAsB,OAIA,UAHAtB,EAAAsB,OACAtB,EAAAuB,MAAAD,EAEA,iBAAAtB,EAAAwB,WAAA,CACA,IAAAC,EAAA,SAAAC,EAAAC,GACA,OAAAC,EAAA,gBAAAD,EAAA,CACAE,KAAAV,EACAW,MAAA9B,EAAA8B,MACAC,UAAA/B,EAAA+B,UACAC,YAAAhC,EAAAgC,YACAC,OAAAjC,EAAAiC,OACAC,OAAAlC,EAAAkC,OACAC,YAAAnC,EAAAmC,eAGAnC,EAAAyB,eAGA,WAAAW,EAAA,KAAApC,IAEAqC,cAhCA,SAgCAC,GACA,IAAA9B,EAAA8B,EAAAlC,gBACAD,KAAAC,gBAAAO,MAAAH,MC9EmT+B,EAAA,cFOnTC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACF3C,EACAC,GACA,EACA,KACA,KACA,MAIe8C,EAAA,WAAAH","file":"js/mbmp_pvm_EsriFeatureLayer.7750bc27.js","sourcesContent":["var render, staticRenderFns\nimport script from \"./FeatureLayer.vue?vue&type=script&lang=js&\"\nexport * from \"./FeatureLayer.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!-- <template>\n  <opacity-slider :layer=\"this.$leafletElement\"\n                  :position=\"'topleft'\"\n  />\n</template> -->\n<script>\n  import * as L from 'leaflet';\n  import { featureLayer as FeatureLayer } from 'esri-leaflet';\n\n  // min and max zooms are not handled by esri leaflet, but are handled by vue\n  export default {\n    name: 'EsriFeatureLayer',\n    props: [\n      'url',\n      'minZoom',\n      'maxZoom',\n      'zIndex',\n      'layerName',\n      'color',\n      'fillColor',\n      'fillOpacity',\n      'weight',\n      'style_',\n      'markerType',\n      'radius',\n      'interactive',\n    ],\n    created() {\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\n      console.log('leafletElement:', leafletElement);\n      const map = this.$store.state.map.map;\n      // REVIEW kind of hacky/not reactive?\n      if (map) {\n        leafletElement.addTo(map);\n      }\n    },\n    destroyed() {\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\n    },\n    // we don't actually render anything, but need to define either a template\n    // or a render function\n    render(h) {\n      return;\n    },\n    methods: {\n      createLeafletElement() {\n        const props = Object.assign({}, this.$props);\n\n        const map = this.$store.state.map.map;\n        const layerName = props.layerName\n        if (!map.getPane(layerName)) {\n          map.createPane(layerName);\n        }\n\n        // remove underscore from style_ prop. `style` is a vue reserved word.\n        const { style_ } = props;\n        delete props.style_;\n        props.style = style_;\n\n        if (props.markerType === 'circleMarker') {\n          let pointToLayer = function (geojson, latlng) {\n            return L.circleMarker(latlng, {\n              pane: layerName,\n              color: props.color,\n              fillColor: props.fillColor,\n              fillOpacity: props.fillOpacity,\n              weight: props.weight,\n              radius: props.radius,\n              interactive: props.interactive,\n            });\n          }\n          props.pointToLayer = pointToLayer;\n        }\n\n        return new FeatureLayer(props);\n      },\n      parentMounted(parent) {\n        const map = parent.$leafletElement;\n        this.$leafletElement.addTo(map);\n      }\n    }\n  };\n</script>\n\n<style>\n\n\n</style>\n","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./FeatureLayer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./FeatureLayer.vue?vue&type=script&lang=js&\""],"sourceRoot":""}